---
import { ViewTransitions } from "astro:transitions";

export interface Props {
  site: string;
  title: string;
  tagline: string;
}

const { site, title, tagline } = Astro.props;
---

<!doctype html>
<html lang="en" data-new-ui-theme="light">
  <head>
    <ViewTransitions />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="https://awesome-bsky-tools.pages.dev/icon.jpg" />
    <meta name="generator" content={Astro.generator} />

    <title>{site} — All in one directory for Bluesky</title>
    <meta name="author" content="@apvarun.com" />
    <meta name="description" content="All in one directory for Bluesky" />
    <meta property="og:title" content="Awesome Bluesky tools" />
    <meta property="og:type" content="website" />
    <meta
      property="og:description"
      content="All in one directory for Bluesky"
    />

    <meta property="og:image" content="https://awesome-bsky-tools.pages.dev/awesome-bsky-tools.jpg" />
    <meta property="og:url" content="https://awesome-bsky-tools.pages.dev" />
    <meta name="twitter:card" content="summary_large_image" />
  </head>

  <body class="flex flex-col min-h-screen px-8 py-4">
    <div class="floating-nav mb-4" aria-label="main navigation">
      <div class="text-xl md:text-2xl font-bold">
        <a href="/" aria-label="home page" tabindex="-1">
          Awesome Bluesky tools
        </a>
      </div>
      <div class="flex items-center gap-2">
        <a
          href="https://github.com/apvarun/awesome-bsky-tools/pulls"
          target="_blank"
          class="submit-btn hover:text-blue-600 hover:underline"
          tabindex="0"
        >
          Submit a Tool
        </a>
        <button
          class="theme-toggle"
          id="theme-toggle"
          title="Toggles light & dark"
          aria-label="auto"
          aria-live="polite"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            ><path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-miterlimit="10"
              stroke-width="1.5"
              d="M12 4V2M3 13H1m22 0h-2m-1.222-7.778-1.414 1.414m-12.728 0L4.222 5.222M4 18h16M8 21h8m-7.43-3.07A5.98 5.98 0 0 1 6 13c0-3.31 2.69-6 6-6s6 2.69 6 6c0 2.05-1.03 3.86-2.6 4.94l-6.83-.01Z"
            ></path></svg
          >
        </button>
      </div>
    </div>

    <header class="my-8 container mx-auto">
      <h1 class="text-2xl font-medium">
        {title}
      </h1>
      <p class="text-slate-700">
        {tagline}
      </p>
    </header>
    <main class="flex-1 container mx-auto">
      <slot />
    </main>

    <div class="footer">
      <p>
        © 2024 Awesome Bsky. Open sourced <a
          href="https://github.com/apvarun/awesome-bsky-tools"
          class="underline hover:text-blue-600"
          target="_blank">@awesome-bsky-tools</a
        >.
      </p>
    </div>
  </body>
</html>
<style is:global>
  .floating-nav {
    padding: var(--spacing-06) var(--spacing-09);
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 999999;
  }
  .floating-nav.is-active {
    position: -webkit-sticky;
    position: sticky;
    animation-name: slideDownNavigation;
    animation-duration: 200ms;
    animation-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
    animation-fill-mode: both;
    animation-iteration-count: 1;
    background-color: var(--background);
    --shadow-color: rgb(0 0 0 / 0.04);
    box-shadow:
      0px 0px 0px 0px var(--shadow-color),
      0px 1px 1px -0.5px var(--shadow-color),
      0px 3px 3px -1.5px var(--shadow-color);
  }
  @keyframes slideDownNavigation {
    from {
      top: -20px;
      opacity: 0.5;
    }

    to {
      top: 0;
      opacity: 1;
    }
  }

  .submit-btn {
    padding: 0.5625rem 0.9375rem;
    border: 1px solid var(--border-muted);
    outline: none;
    text-decoration: none;
    color: inherit;
    cursor: pointer;
    color: var(--text-secondary);
    background-color: var(--background);
    border-radius: var(--spacing-03);
    font-size: var(--desktop-body-sm);

    &:hover {
      background-color: var(--background-secondary);
      color: var(--text-primary);
    }

    &:active {
      background-color: var(--background);
      color: var(--text-secondary);
    }

    &.disabled {
      background-color: var(--background);
      color: var(--icon-secondary);
      pointer-events: none;
    }

    &:focus {
      background-color: var(--background);
      outline: 1px solid var(--button-primary);
      color: var(--icon-secondary);
    }
  }
  .theme-toggle {
    z-index: 999;
    --icon-fill: var(--icon-secondary);
    --icon-fill-hover: var(--icon-secondary);
    width: var(--spacing-09);
    height: var(--spacing-09);
    background: none;
    border: none;
    padding: var(--spacing-00);
    color: var(--icon-secondary);
    cursor: pointer;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--spacing-02);

    @nest [data-theme="dark"] & {
      --icon-fill: var(--icon-secondary);
      --icon-fill-hover: var(--icon-secondary);
    }
  }
  .footer p {
    padding-bottom: var(--spacing-10);
    text-align: center;
    font-weight: normal;
    font-style: normal;
    color: var(--text-secondary-alt);
    font-size: var(--desktop-body-sm);
    line-height: var(--lh-desktop-body);
  }

  @media (max-width: 30rem) {
    main {
      margin: auto var(--spacing-06);
    }
    .floating-nav {
      padding: var(--spacing-06) var(--spacing-06);
    }
    .container {
      margin: var(--spacing-06);
    }
  }
</style>

<script is:inline>
  history.scrollRestoration = "manual";
  window.onbeforeunload = function () {
    window.scrollTo(0, 0);
  };

  const nav = document.querySelector(".floating-nav");
  const pageCTA = document.querySelector(".floating-nav .submit-btn");
  var pageCTAPosition = 0;
  if (pageCTA) {
    pageCTAPosition = pageCTA.getBoundingClientRect().bottom;
  }

  var previousScrollPosition = 0;

  const handleNavScroll = () => {
    let currentScrolledPosition = window.scrollY || window.pageYOffset;
    if (isScrollingDown()) {
      nav.classList.add("scroll-down");
      nav.classList.remove("scroll-up");
    } else {
      nav.classList.add("scroll-up");
      nav.classList.remove("scroll-down");
    }
    if (currentScrolledPosition > pageCTAPosition + 50) {
      if (!nav.classList.contains("is-active")) {
        nav.classList.add("is-active");
      }
    } else {
      if (nav.classList.contains("is-active")) {
        nav.classList.remove("is-active");
      }
    }
  };

  function isScrollingDown() {
    let currentScrolledPosition = window.scrollY || window.pageYOffset;
    let scrollingDown;
    if (currentScrolledPosition > previousScrollPosition) {
      scrollingDown = true;
    } else {
      scrollingDown = false;
    }
    previousScrollPosition = currentScrolledPosition;
    return scrollingDown;
  }

  var throttleWait;
  function throttle(callback, time) {
    if (throttleWait) return;
    throttleWait = true;
    setTimeout(() => {
      callback();
      throttleWait = false;
    }, time);
  }

  window.addEventListener("scroll", () => {
    throttle(handleNavScroll, 80);
  });
</script>

<script is:inline>
  // Initial theme setup
  const theme = (() => {
    if (
      typeof localStorage !== "undefined" &&
      localStorage.getItem("theme-preference")
    ) {
      return localStorage.getItem("theme-preference");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  })();

  document.firstElementChild.setAttribute("data-new-ui-theme", theme);

  // Handle theme toggle
  function toggleTheme() {
    const currentTheme =
      document.firstElementChild.getAttribute("data-new-ui-theme");
    const newTheme = currentTheme === "light" ? "dark" : "light";

    document.firstElementChild.setAttribute("data-new-ui-theme", newTheme);
    localStorage.setItem("theme-preference", newTheme);
  }

  // Initialize toggle button
  function initThemeToggle() {
    const themeToggle = document.querySelector("#theme-toggle");
    if (themeToggle) {
      themeToggle.addEventListener("click", toggleTheme);
    }
  }

  // Handle page transitions
  document.addEventListener("astro:page-load", () => {
    const storedTheme = localStorage.getItem("theme-preference");
    if (storedTheme) {
      document.firstElementChild.setAttribute("data-new-ui-theme", storedTheme);
    }
    initThemeToggle();
  });

  // Handle system theme changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", ({ matches: isDark }) => {
      const newTheme = isDark ? "dark" : "light";
      document.firstElementChild.setAttribute("data-new-ui-theme", newTheme);
      localStorage.setItem("theme-preference", newTheme);
    });

  // Initialize on first load
  initThemeToggle();
</script>
